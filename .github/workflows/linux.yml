name: GO_LINUX

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.14', '1.19' ]
    name: Go ${{ matrix.go }}
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          path: 'taosadapter'
      - name: checkout TDengine
        uses: actions/checkout@v2
        with:
          repository: 'taosdata/TDengine'
          path: 'TDengine'
          ref: '3.0'

      - name: Cache cmake
        id: cache-cmake
        uses: actions/cache@v3
        with:
          path: TDengine/debug
          key: ${{ runner.os }}-cmake

      - name: install TDengine
        run: cd TDengine && mkdir debug && cd debug && cmake .. -DBUILD_HTTP=true -DBUILD_JDBC=false -DBUILD_TOOLS=false && make && sudo make install

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('taosadapter/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: shell
        run: |
          cat >start.sh<<EOF
          ulimit -n 65535 && TAOS_SUPPORT_VNODES=256 taosd
          EOF

      - name: taosd
        run: nohup sudo sh ./start.sh &


      - name: Test
        run: cd ./taosadapter && go test -v ./...
